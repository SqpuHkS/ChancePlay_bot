import config
import telebot
import mysql_matches
import mysql_bets
import mysql_clients
import random
import string
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from parsing import get_date


bot = telebot.TeleBot(config.token)

def id_generator(size=8, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))

def next_step_bet(message):
    try:
        if message.text.isdigit() and int(message.text) <= mysql_clients.mysql_get_tokens(message.from_user.id)\
                and int(message.text) > 0:
            if mysql_clients.mysql_user_tokens_minus_bet(message.from_user.id, message.text) == True:
                main_id = mysql_bets.mysql_get_main_id(message.from_user.id, get_date())
                mysql_bets.mysql_update_bets(main_id[-1], message.text)
                bot.send_message(message.chat.id, "‚úÖ –°—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!")
        else:
            bot.send_message(message.chat.id, "‚õîÔ∏è–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!. \n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ /matches")
    except:
        bot.send_message(message.chat.id, "‚õîÔ∏è–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!. \n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ /matches")

def next_step_change(message):
    temp = mysql_clients.mysql_change_check(message)
    if temp == True:
        bot.send_message(message.chat.id,
                         '‚õîÔ∏è–í—ã –≤–≤–µ–ª–∏ –≤–∞—à–µ –∏–º—è –µ—â–µ —Ä–∞–∑, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –µ–≥–æ, –Ω–∞–∂–º–∏—Ç–µ /change')
    else:
        mysql_clients.mysql_change_UPDATE(message)

def home_coef(home_bet_tokens, guest_bet_tokens):
    try:
        return round((home_bet_tokens+guest_bet_tokens)/home_bet_tokens, 2)
    except ZeroDivisionError:
        return 1.5

def guest_coef(home_bet_tokens, guest_bet_tokens):
    try:
        return round((home_bet_tokens+guest_bet_tokens)/guest_bet_tokens, 2)
    except ZeroDivisionError:
        return 1.5

def draw_coef(home_bet_tokens, guest_bet_tokens):
    try:
        if home_bet_tokens > guest_bet_tokens:
            return round(home_bet_tokens/guest_bet_tokens, 2)+0.5
        else:
            return round(guest_bet_tokens/home_bet_tokens, 2)+0.5
    except ZeroDivisionError:
        return 1.5

#added it
def gen_markup():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    length, home_team, guest_team, id = mysql_matches.mysql_select_home_teams(get_date()), mysql_matches.mysql_get_teams('home_team', get_date()), \
                                        mysql_matches.mysql_get_teams('guest_team', get_date()), mysql_matches.mysql_get_teams('match_id', get_date())

    for i in range(length):
        markup.add(InlineKeyboardButton(home_team[i]+'  ‚Äî  '+guest_team[i],
                                        callback_data='cb_match{}'.format(id[i])))
    return markup

#added it
#—Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç–∞–≤–æ–∫
def gen_bet(i, home_team_bet, guest_team_bet, draw_team_bet):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    home_team, guest_team, id = mysql_matches.mysql_get_teams('home_team', get_date()), \
                                        mysql_matches.mysql_get_teams('guest_team', get_date()), mysql_matches.mysql_get_teams('match_id', get_date())
    markup.add(InlineKeyboardButton(home_team[i] + '  ({})'.format(home_team_bet), callback_data='cb_home_team_{}'.format(id[i])),
                   InlineKeyboardButton(guest_team[i] + '  ({})'.format(guest_team_bet), callback_data='cb_guest_team_{}'.format(id[i])),
                    InlineKeyboardButton('–ù–∏—á—å—è' + '  ({})'.format(draw_team_bet), callback_data='cb_draw_{}'.format(id[i])))
    return markup



#added it
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    length, home_team, guest_team, id, tokens = mysql_matches.mysql_select_home_teams(get_date()),\
                                                mysql_matches.mysql_get_teams('home_team', get_date()), \
                                                mysql_matches.mysql_get_teams('guest_team', get_date()),\
                                                mysql_matches.mysql_get_teams('match_id', get_date()),\
                                                mysql_clients.mysql_get_tokens(call.from_user.id),

    msg = "üí∞ –£ –≤–∞—Å {} tokens. \n\n–°–∫–æ–ª—å–∫–æ tokens –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å?".format(tokens)
    for i in range(length):
        home_bet_tokens, guest_bet_tokens, draw_bet_tokens = mysql_bets.mysql_get_tokens(id[i], 1, get_date()),\
                                                             mysql_bets.mysql_get_tokens(id[i], 2, get_date()),\
                                                             mysql_bets.mysql_get_tokens(id[i], 3, get_date())
        home_team_bet, guest_team_bet, draw_team_bet = home_coef(home_bet_tokens, guest_bet_tokens), \
                                                       guest_coef(home_bet_tokens, guest_bet_tokens), \
                                                       draw_coef(home_bet_tokens, guest_bet_tokens)
        if call.data == 'cb_match{}'.format(id[i]) and mysql_matches.mysql_get_status(id[i], get_date()) == 1:
            txt = 'üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: \t\n{home_team}  ({home_bet})\t\n–ù–∏—á—å—è  ({draw})\t\n{guest_team}  ({guest_bet})\n'.format(home_team = home_team[i],
                                                                                                                   home_bet = home_team_bet,
                                                                                                                   draw = draw_team_bet,
                                                                                                                   guest_team = guest_team[i],
                                                                                                                   guest_bet = guest_team_bet)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   text=txt, reply_markup=gen_bet(i, home_team_bet, guest_team_bet, draw_team_bet))

        if call.data == 'cb_home_team_{}'.format(id[i]) and mysql_matches.mysql_get_status(id[i], get_date()) == 1:
            msg_edit = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=msg)
            mysql_bets.mysql_insert_bets(call.from_user.id, id[i], 1, home_team_bet, -1, 1, 1, get_date())
            bot.register_next_step_handler(msg_edit, next_step_bet)

        if call.data == 'cb_guest_team_{}'.format(id[i]) and mysql_matches.mysql_get_status(id[i], get_date()) == 1:
            msg_edit = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=msg)
            mysql_bets.mysql_insert_bets(call.from_user.id, id[i], 2, guest_team_bet, -1, 1, 1, get_date())
            bot.register_next_step_handler(msg_edit, next_step_bet)

        if call. data == 'cb_draw_{}'.format(id[i]) and mysql_matches.mysql_get_status(id[i], get_date()) == 1:
            msg_edit = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=msg)
            mysql_bets.mysql_insert_bets(call.from_user.id, id[i], 3, draw_team_bet, -1, 1, 1, get_date())
            bot.register_next_step_handler(msg_edit, next_step_bet)




@bot.message_handler(commands=['start'])
def handle_start(message):
    temp = mysql_clients.mysql_start_check(message)
    if temp == True:
        bot.send_message(message.chat.id,
                         '‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∏–∫–Ω–µ–π–º, –Ω–∞–∂–º–∏—Ç–µ /change')
    else:
        msg = bot.send_message(message.chat.id, '‚úèÔ∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º —á—Ç–æ–± –Ω–∞—á–∞—Ç—å')
        bot.register_next_step_handler(msg, mysql_clients.mysql_start_INSERT)

@bot.message_handler(commands=['change'])
def handle_change(message):
    msg = bot.send_message(message.chat.id, 'üì® –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º')
    bot.register_next_step_handler(msg, next_step_change)

# @bot.callback_query_handler(func=lambda call: True)
# def callback_query(call):
#     if call.data ==

@bot.message_handler(commands=['matches'])
def handle_matches(message):
    if mysql_matches.mysql_select_home_teams(get_date()) == 0:
        bot.send_message(message.chat.id, "‚ö†Ô∏è–£–ø—Å, –Ω–µ—Ç –º–∞—Ç—á–µ–π")
    else:
        bot.send_message(message.chat.id, "‚öΩÔ∏è–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –º–∞—Ç—á–∏:" , reply_markup=gen_markup())

@bot.message_handler(commands=['help'])
def handle_help(message):
    msg = ''' ‚úåüèª –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ChancePlay_bot 
    
    ü§ë –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å—Ç–∞–≤–æ–∫ –Ω–∞ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –º–∞—Ç—á–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –¥–µ–Ω–µ–≥.
    
    üìå –í—Å—é –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    üëâüèª –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∞–∂–∞–≤ –Ω–∞ /commands.
    
    üëáüèº –¢–∞–∫ –∂–µ —Å–∞–º—ã–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∏–∂–µ –≤–∞—à–µ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    üëåüèæ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º –∏ –±–æ—Ç —Å—Ä–∞–∑—É –∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    
    üì© –¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—Å–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–≤–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @Slabeyshiy
            
                                ‚úÖ –£–¥–∞—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫! ‚úÖ
    '''
    bot.send_message(message.chat.id, msg)


@bot.message_handler(commands=['commands'])
def handler_commands(message):
    msg = '''üìÉ–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
    
     /matches   (–≥–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—Ç—á–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è)
    
     /start   (–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –±–æ—Ç–∞, –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
     /help   (–Ω–µ–±–æ–ª—å—à–æ–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ –±–æ—Ç–µ)
     /commands   (—Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥)
     /email   (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—á—Ç—ã) - –Ω–∞–≥—Ä–∞–¥–∞ 50 —Ç–æ–∫–µ–Ω–æ–≤
     /promo   (–≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≥—Ä–∞–¥–∞—Ö) - –Ω–∞–≥—Ä–∞–¥–∞ 50 —Ç–æ–∫–µ–Ω–æ–≤
     /change   (–∑–∞–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞)
     /info   (–≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ)
     /tokens   (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ)
     /bets   (—Ñ–∞–π–ª –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –≤–∞—à–∏ —Å—Ç–∞–≤–∫–∏)
     /top   (—Ç–æ–ø –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–∫–µ–Ω–æ–≤ –±–æ–ª—å—à–µ 500)
    '''
    bot.send_message(message.chat.id, msg)
#
# @bot.message_handler(commands=['email'])
# def handler_email(message):


# –°–¥–µ–ª–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã –∏–º–µ–π–ª —á—Ç–æ–± —Ö—Ä–∞–Ω–∏–ª–∞—Å—å –≤ –±–∞–∑–µ –∏ –¥–∞—Ç—å –∑–∞ —ç—Ç–æ 50 –∫–æ–∏–Ω–æ–≤
# @bot.message_handler(commands=['email'])
# def handle_start(message):
#     temp = mysql.mysql_start_check(message)
#     if temp == True:
#         bot.send_message(message.chat.id,
#                          'You are already registered, if you want to change your nickname press /change')
#     else:
#         msg = bot.send_message(message.chat.id, 'Write your nickname to start the game')
#         bot.register_next_step_handler(msg, mysql.mysql_start_INSERT)

#–°–¥–µ–ª–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –µ–∂–µ–¥–Ω–µ–≤–æ–≥–æ –±–æ–Ω—É—Å–∞ –∫–∞–∫ –∫–æ–ª–µ—Å–æ –¥–∞–µ—Ç –æ—Ç 1 –¥–æ 10 –∫–æ–∏–Ω–æ–≤
#–°–¥–µ–ª–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü—ã, —É –∫–æ–≥–æ –±–æ–ª—å—à–µ 500 –∫–æ–∏–Ω–æ–≤ —Ç–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ç–∞–±–ª–∏—Ü—É ... –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤ –∑–∞–º–µ—Ç–∫–∞—Ö –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ

#–Ω–∏–∂–µ —Ö—Ä–µ–Ω—å –Ω—É–∂–Ω–∞ —á—Ç–æ–± —É–¥–∞–ª—è—Ç—å –ø–æ—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ —Å—Ç–∞–≤–æ–∫ –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø—Ä–æ—à–ª–∏, –¥–∞—Ç—É —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –Ω–∞—á–∞–ª–æ –º–∞—Ç—á–∞, —á—Ç–æ–±—ã –Ω–µ —Å—Ç–∞–≤–∏–ª–∏ –≤–æ –≤—Ä–µ–º—è –º–∞—Ç—á–∞
#bot.delete_message(message.chat.id, message.message_id)
#–ª–∏–±–æ –∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å editMessageText, –Ω–æ –ø—Ä–æ –Ω–µ–µ —Å—Ç–æ–ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ –Ω–µ –∑–Ω–∞—é, –Ω–∞–¥–æ —É–∑–Ω–∞—Ç—å


# def next_first_step_bet(call):



if __name__ == '__main__':
    bot.polling(none_stop=True)